<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NotSupportedVersion" xml:space="preserve">
    <value>不支持版本 {0}。</value>
  </data>
  <data name="BadTestAttributeCategory" xml:space="preserve">
    <value>该测试特性类别不存在。</value>
  </data>
  <data name="ManagedCPPNotSupported" xml:space="preserve">
    <value>“{0}”是托管 C++ 程序集。不支持在托管 C++ 程序集中进行本机 C++ 单元测试，而是应使用面向托管 C++ 的单元测试。</value>
  </data>
  <data name="NoTestMetaData" xml:space="preserve">
    <value>该二进制文件中没有测试元数据部分。</value>
  </data>
  <data name="WrongPlatformString" xml:space="preserve">
    <value>以下平台不存在: {0}。</value>
  </data>
  <data name="InvalidPEHeader" xml:space="preserve">
    <value>PE 头无效</value>
  </data>
  <data name="MissingHelperMethod" xml:space="preserve">
    <value>缺少 Helper 方法。</value>
  </data>
  <data name="NotSupportedMachineType" xml:space="preserve">
    <value>不支持计算机类型 {0}。</value>
  </data>
  <data name="WrongIndex" xml:space="preserve">
    <value>索引不正确。</value>
  </data>
  <data name="BadMetaData" xml:space="preserve">
    <value>该元数据无效或已损坏。</value>
  </data>
  <data name="MissingClassName" xml:space="preserve">
    <value>元数据中缺少类名称。</value>
  </data>
  <data name="InvalidTextFile" xml:space="preserve">
    <value>遇到无效的文本文件。</value>
  </data>
  <data name="BadFilePathUri" xml:space="preserve">
    <value>以下 URI 不是有效的文件路径: {0}。</value>
  </data>
  <data name="EndOfStream" xml:space="preserve">
    <value>尝试在文件 {0} 的结尾之外进行读取。</value>
  </data>
  <data name="NullTestMetaData" xml:space="preserve">
    <value>测试元数据为 null。</value>
  </data>
  <data name="NotFullPath" xml:space="preserve">
    <value>{0} 不是完整路径。定位到源代码需要完整路径。请为测试项目启用 /FC 编译选项，否则无法支持定位到源文件。</value>
  </data>
  <data name="NullVersionArg" xml:space="preserve">
    <value>版本不应为 null。</value>
  </data>
  <data name="MissingSourceFileInfo" xml:space="preserve">
    <value>缺少方法 {0} 的源文件信息。</value>
  </data>
  <data name="MissingLineNoInfo" xml:space="preserve">
    <value>缺少方法 {0} 的行号信息。</value>
  </data>
  <data name="NoTestVersionInfo" xml:space="preserve">
    <value>该二进制文件中没有版本部分。</value>
  </data>
  <data name="BadTestAttributeName" xml:space="preserve">
    <value>该测试特性名称为 null 或空</value>
  </data>
  <data name="BadTestAttributeValue" xml:space="preserve">
    <value>该测试特性包含 null 或空值: {0}。</value>
  </data>
  <data name="AttributeValueNotNumber" xml:space="preserve">
    <value>{0} 特性值应为不带符号的十进制数字。</value>
  </data>
  <data name="NonNullTerminatedString" xml:space="preserve">
    <value>字符串未以 null 终止。</value>
  </data>
  <data name="NoSupportFor64BitBinaryIn32BitProcess" xml:space="preserve">
    <value>32 位进程无法加载 64 位测试二进制文件。</value>
  </data>
</root>